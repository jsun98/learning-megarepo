{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Linux Shell and Shell Scripts"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Commands\n",
    "`grep [-options] pattern [filename]`: used for repetitive searching tasks\n",
    "\n",
    "`less [-options] [filename]`: display one page of a file (arrow keys and (j, k) are used to scroll through pages)\n",
    "\n",
    "`cat [-options] [filename]`: read contents of files, concat files"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Operators \n",
    "\n",
    "### Control Operators\n",
    "`;`: will run the command before and wait to finsih before running the second one\n",
    "\n",
    "`&`: will run the first cmd in the background, second cmd will start in the foreground before the first finishes\n",
    "\n",
    "### Pipe operators\n",
    "`|`: used to send the standard output of one program to another's standard input for further processing\n",
    "\n",
    "`|&`: send the output and error of one program to another\n",
    "\n",
    "### Redirection operators\n",
    "`<`: gives input to command. ex. `cmd < input.txt`\n",
    "\n",
    "`>`: gives output to file. ex. `cmd > output.txt`. ex: `command > out.txt 2> error.txt` - `>` redirects output to out.txt while `2>` redirects stderr to error.txt\n",
    "\n",
    "`>|`: same as `>` but overwrites the target\n",
    "\n",
    "`>>`: same as `>` but if target exists, will append content to file\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
